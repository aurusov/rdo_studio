<HTML>
<HEAD>
<TITLE>Арифметические и логические выражения</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../../../shared/styles/styles.css">
<link rel="stylesheet" href="../../../shared/styles/highlight.styles/googlecode.css">
<META http-equiv="Content-type" content="text/html; charset=utf-8" />
<script src="../../../shared/scripts/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
</HEAD>
<BODY>
    <DIV>
        <H1>АРИФМЕТИЧЕСКИЕ И ЛОГИЧЕСКИЕ ВЫРАЖЕНИЯ</H1>
        <P><A name="arith_expr"></A><B>Арифметические выражения</B> в данной версии языка могут быть целого, вещественного, перечислимого типов, а также иметь <A href="rdo_base_res_types.htm">тип ресурса</A>, описанный в модели. Выражения целого и вещественного типов состоят из операндов, знаков арифметических операций и круглых скобок.</P>
        <P><A name="oper"></A><B>Операндами</B> арифметического выражения служат:</P>
        <UL>
            <LI><A href="../rdo_obj/rdo_obj_const.htm#const_desc">численные константы</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_const.htm#const_desc">символьные константы</A>;</LI>
            <LI><A href="rdo_base_std_var_func.htm">глобальные переменные и функции</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_fun.htm">функции</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_sec/rdo_obj_sec.htm">последовательности</A>;</LI>
            <LI><A href="rdo_base_res_types.htm">параметры ресурсов</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_pat.htm">параметры релевантных ресурсов</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_pat.htm#param_desc">параметры образцов</A>;</LI>
            <LI><A href="../rdo_obj/rdo_obj_fun.htm#param_desc">параметры функций</A>.</LI>
        </UL>
        <P>Возможность использования операндов зависит от контекста. Так, параметры функции можно использовать в арифметических выражениях лишь в теле алгоритмических функций, а параметры образца и параметры релевантных ресурсов - в теле образцов.</P>
        <P><A name="operations"></A><A name="operations_plus"></A><A name="operations_minus"></A><A name="operations_star"></A><A name="operations_div"></A>В выражениях целого и вещественного типа допустимы следующие арифметические операции: сложение (+), вычитание (-), умножение (*), деление (/). Порядок вычисления значения выражения определяется старшинством арифметических операций и скобками. Сначала выполняется вычисление значений в скобках, затем умножение и деление и, наконец, сложение и вычитание.</P>
        <P><A name="type"></A><B>Тип арифметического выражения</B> определяется типами операндов, которые задаются пользователем при описании констант, функций, последовательностей, типов ресурсов, образцов. Выражение имеет целый тип, если все операнды имеют целый тип. Если в выражение входят только целые и вещественные операнды (хотя бы один), то выражение имеет вещественный тип. Выражения перечислимого типа состоят из единственного операнда перечислимого типа либо имени значения перечислимого типа. Арифметические операции над перечислимыми операндами не определены.</P>
        <P>При вычислении значения арифметического выражения тип результата выполнения арифметической операции будет целым, если оба операнда целые. Если хотя бы один операнд имеет вещественный тип, то результат имеет вещественный тип. Результатом деления целых чисел является целое число - целая часть результата деления. Дробная часть отбрасывается. Например, результатом выражения 2 * (5 / 2) будет целое число 4, а выражения 2 * (5.0 / 2) - вещественное число 5.0.</P>
        <H4>Примеры</H4>
        <PRE class="syntax"><code class="rdo">1 + 3 + 5 + 7.0 = 16.0</code></PRE>
        <PRE class="syntax"><code class="rdo">2 + 3 * 4 + 7 = 21</code></PRE>
        <PRE class="syntax"><code class="rdo">(2 + 3) * (4 + 7) = 55</code></PRE>
        <PRE class="syntax"><code class="rdo">2.0 * (3 * 4 + 7) = 38.0</code></PRE>
        <H4>Примечание</H4>
        <P class="remarks">При использовании в качестве операндов численных констант их необходимо отделять от стоящих перед ними знаков &quot;+&quot; или &quot;-&quot; по крайней мере одним разделителем. В противном случае эти знаки воспринимаются не как знаки арифметических операций, а как знак численной константы.</P>
        <P><A name="log_expr"></A><B>Логические выражения</B> состоят из логических стандартных функций, арифметических выражений, объединенных в пары операциями отношения, логических операций и квадратных (круглых) скобок.</P>
        <P><A name="rel_oper"></A><A name="rel_oper_eq"></A><A name="rel_oper_neq"></A><A name="rel_oper_great"></A><A name="rel_oper_less"></A><A name="rel_oper_greateq"></A><A name="rel_oper_lesseq"></A>Операции отношения включают в себя:</P>
        <TABLE class="visible" style="width: 95.5%">
            <TR valign="top">
                <TH align=left width=20%>Операция</TH>
                <TH align=left width="80%">Значение</TH>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>==</TD>
                <TD class="visible" width="80%">Равно</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>&lt;&gt;</TD>
                <TD class="visible" width="80%">Не равно</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>!=</TD>
                <TD class="visible" width="80%">Не равно</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>&lt;</TD>
                <TD class="visible" width="80%">Меньше</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>&gt;</TD>
                <TD class="visible" width="80%">Больше</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>&lt;=</TD>
                <TD class="visible" width="80%">Меньше или равно</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>&gt;=</TD>
                <TD class="visible" width="80%">Больше или равно</TD>
            </TR>
        </TABLE>
        <P><A name="log_oper"></A>Логические операции:</P>
        <TABLE class="visible" style="width: 95.5%">
            <TR valign="top">
                <TH align=left width=20%>Операция</TH>
                <TH align=left width="80%">Значение</TH>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>and</TD>
                <TD class="visible" width="80%">операция И</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>or</TD>
                <TD class="visible" width="80%">операция ИЛИ</TD>
            </TR>
            <TR valign="top">
                <TD class="visible" width=20%>not (или символ '!')</TD>
                <TD class="visible" width="80%">операция ОТРИЦАНИЕ</TD>
            </TR>
        </TABLE>
        <P>При вычислении значения логического выражения сначала вычисляются значения арифметических выражений, затем результаты операций отношения и значения стандартных логических функций и в последнюю очередь выполняются логические операции. Оба арифметических выражения в операции отношения должны иметь один и тот же тип, либо одно должно быть вещественным, а второе - целым. Если одно из арифметических выражений в операции отношения имеет вещественный тип, то при выполнении операции отношения значение второго выражения также преобразуется к вещественному типу. Если оба арифметических выражения целого типа, то операция отношения выполняется над целыми операндами. Над выражениями перечислимого типа допустимы только операции &quot;равно&quot; и &quot;не равно&quot;.</P>
        <P>Порядок выполнения логических операций при вычислении выражения определяется старшинством и скобками. Сначала вычисляются значения в скобках, затем выполняются операции И, затем ИЛИ. При вычислении используется короткая схема, т.е. вычисляются значения не всех логических операндов, а только значения, необходимые для получения результата логической операции. Так, если первый операнд в операции ИЛИ имеет значение ИСТИНА, то независимо от значения второго операнда результат операции будет ИСТИНА, поэтому нет необходимости вычислять значение второго операнда. Аналогично, если в операции И первый операнд имеет значение ЛОЖЬ, то независимо от значения второго операнда значением операции будет ЛОЖЬ.</P>
        <H4>Примеры</H4>
        <PRE class="syntax"><code class="rdo">1 + 3 * 5 &lt;= 20 - ИСТИНА</code></PRE>
        <PRE class="syntax"><code class="rdo">1 + 3 * 5 &lt;= 20 and 1.0 &gt; 2 - ЛОЖЬ</code></PRE>
        <PRE class="syntax"><code class="rdo">2 * (5 / 2) = 2 * (5.0 / 2) - ЛОЖЬ</code></PRE>
        <PRE class="syntax"><code class="rdo">2 &gt;= 1 and 5 &lt;= 3 or 7 &lt;&gt; 5 - ИСТИНА</code></PRE>
        <PRE class="syntax"><code class="rdo">not 1 &gt; 2 and 10 &gt; 3 - ИСТИНА</code></PRE>
        <PRE class="syntax"><code class="rdo">not(1 &gt; 2 or 10 &gt; 3) - ЛОЖЬ</code></PRE>
        <H4>См. также</H4>
        <P><A href="rdo_base_types.htm">Типы данных. Соответствие типов</A></P>
    </DIV>
    <BR><SCRIPT src="../../../shared/scripts/navbar.js"></SCRIPT>
</BODY>
</HTML>