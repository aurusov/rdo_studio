<HTML>
<HEAD>
<TITLE>Кадры анимации</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../../../shared/styles/styles.css">
<link rel="stylesheet" href="../../../shared/styles/highlight.styles/googlecode.css">
<META http-equiv="Content-type" content="text/html; charset=utf-8" />
<script src="../../../shared/scripts/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<SCRIPT>
function toggle_display(e)
{
    if (e.style.display == "none")
        e.style.display = "";
    else
        e.style.display = "none";
    return false;
}
</SCRIPT>
</HEAD>
<BODY>
    <DIV>
        <H1>КАДРЫ АНИМАЦИИ</H1>
        <P><B>Описание кадров</B> производится в отдельном <A href="../rdo_terms.htm#object">объекте</A>, который является исходным для системы отображения. Этот объект имеет расширение <FONT class="syntax">.frm</FONT>. <A name="frame"></A>Кадр представляет собой прямоугольную область экрана, в которой производится отображение. Он состоит из фоновой картинки и переменных элементов (элементов отображения или спрайтов), состав, форма, размеры и расположение которых определяются состоянием системы и, следовательно, могут изменяться во время просмотра кадра.</P>
        <P>Описание кадра имеет следующий формат:</P>
        <PRE class="syntax"><code class="rdo">$Frame <A class="syntax" href="#frm_name">&lt;имя_кадра&gt;</A>
$Back_picture = <A class="syntax" href="#back_desc">&lt;описание_фоновой_картинки&gt;</A>
    [<A class="syntax" href="#elem_desc">&lt;описание_элементов_отображения&gt;</A>]
$End</code></PRE>
        <DL class="syntax">
            <DT class="syntax"><A name="frm_name"></A><I>имя_кадра</I></DT>
            <DD class="syntax">Имя кадра представляет собой <A href="../rdo_lex_div/rdo_lex_div_names.htm">простое имя</A>. Имена должны быть различными для всех кадров и не должны совпадать с ранее определенными именами.</DD>
            <DT class="syntax"><A name="back_desc"></A><I>описание_фоновой_картинки</I></DT>
            <DD class="syntax">Описание фоновой картинки имеет следующий формат:
                <PRE class="syntax"><code class="rdo">[<A class="syntax" href="#back_color">&lt;цвет_фона&gt;</A>] (<A class="syntax" href="#frm_dim">&lt;размеры_кадра&gt;</A> | <A class="syntax" href="#frm_file">&lt;имя_файла_фона&gt;</A>)</code></PRE>
                <DL class="syntax">
                    <DT class="syntax"><A name="back_color"></A><I>цвет_фона</I></DT>
                    <DD class="syntax">Цвет фона задает цвет части <A href="#frame">кадра</A>, которая находится за пределами фоновой картинки. Цвет задается тремя <A href="../rdo_lex_div/rdo_lex_div_numeric_const.htm">численными константами</A> целого типа, разделенными пробелами и заключенными в угловые скобки. Каждое число должно находиться в диапазоне 0..255, оно задает интенсивность одной из трех цветовых составляющих: первое - красной, второе - зеленой и третье - синей.
                        <DL class="syntax">
                            <DD class="syntax">
                                <H4>Примеры</H4>
                                <PRE class="syntax"><code class="rdo">&lt;0   0   0&gt;   - черный
&lt;255 0   0&gt;   - красный
&lt;0   255 0&gt;   - зеленый
&lt;0   0   255&gt; - синий
&lt;255 255 0&gt;   - желтый
&lt;255 255 255&gt; - белый
&lt;127 127 127&gt; - серый</code></PRE>
                            </DD>
                        </DL>
                        <P>Цвет фона является необязательным параметром. Если он не задан, используется значение по умолчанию, равное &lt;0 100 0&gt; (это значение соответствует темно-зеленому цвету).</P>
                    </DD>
                    <DT class="syntax"><A name="frm_dim"></A><A name="frm_file"></A><I>размеры_кадра, имя_файла_фона</I></DT>
                    <DD class="syntax">Для описания фоновой картинки задают либо имя файла, содержащего фоновое изображение, либо размер фоновой картинки. Файл фоновой картинки должен быть растровым изображением, сохраненным в формате независимой от устройства битовой карты (BMP - формате) и иметь расширение .bmp.
                        <P>Если вместо имени файла указаны размеры фоновой картинки, РДО-имитатор сам создает фоновую картинку, которая представляет собой прямоугольник указанного размера с цветом фона и границей черного цвета толщиной в один пиксел. Размеры задают двумя численными константами целого типа. Первое число задает ширину фоновой картинки и должно быть в диапазоне 1..800, второе число задает высоту и должно находиться в диапазоне 1..600.</P>
                    </DD>
                </DL>
            </DD>
            <DT class="syntax"><A name="elem_desc"></A><I>описание_элементов_отображения</I></DT>
            <DD class="syntax">Список элементов можно посмотреть по <A href="rdo_obj_frm_elem.htm">ссылке</A>.
                <P>Кадр анимации может быть пустым. При описании кадра может быть использован <A href="../rdo_base/rdo_base_proc_lang.htm">процедурный язык</A>. Это дает возможность отображать часть элементов по заданному <A href="../rdo_base/rdo_base_proc_lang.htm#operator_if">условию</A> или сокращать объём кода модели за счет <A href="../rdo_base/rdo_base_proc_lang.htm#operator_for">циклов</A>.</P>
            </DD>
        <A href="" class="ref" onclick="return toggle_display(v1);"><H4>Пример</H4></A>
        <DIV style="display:none" id="v1">
        <PRE class="syntax"><code class="rdo">$Frame Кадр_1
$Back_picture = <0 255 255> animbg

   triang(Система_1.X_коорд_1, Система_1.Y_коорд_1,
          Система_1.X_коорд_2, Система_1.Y_коорд_2,
          Система_1.X_коорд_3, Система_1.Y_коорд_3, <255  0   0>, <255 255 0>);

   text   (Система_2.X_коорд_1, Система_2.Y_коорд_1, 100, 20, transparent, <255 255 0>, 'Всем привет!');
   circle (145, 220, 50, yellow, red);
   ellipse(Система_2.X_коорд_1, Система_2.Y_коорд_1, 50, 50, <0  0 255>, <255 255 0>);

   r_rect(Система_2.X_коорд_3 - 30, Система_2.Y_коорд_3 - 20, 60, 40, <255  255  255>, <255  0  255>);
   bitmap(Система_3.X_коорд_1 - 20,Система_3.Y_коорд_1 - 20, face1, face1m);
   s_bmp (Система_3.X_коорд_2 - 20,Система_3.Y_коорд_2 - 20, Система_3.X_коорд_2 / 5, Система_3.Y_коорд_2 / 5, ring, ringm);
   line  (Система_3.X_коорд_3, Система_3.Y_коорд_3, Система_3.X_коорд_2, Система_3.Y_коорд_2, <255 255 255>);

   if (Система_2.X_коорд_2 > 30 and Система_2.Y_коорд_2 > 30 and Система_2.X_коорд_2 < X_размер-30 and Система_2.Y_коорд_2 < Y_размер - 30)
      ellipse(Система_2.X_коорд_2 - 30, Система_2.Y_коорд_2 - 30, 60, 60, <0  255  255>, <0  0  255>);

   if (Система_2.X_коорд_2 >= 0 and Система_2.X_коорд_2 <= 30)
   {
      ellipse(0, Система_2.Y_коорд_2 - 30, Система_2.X_коорд_2 * 2, 60, <0  255  255>, <0  0  255>);
      ellipse(Система_2.X_коорд_2 - 30, 0, 60, Система_2.Y_коорд_2 * 2, <0  255  255>, <0  0  255>);
   }

$End</code></PRE>
    </DIV>
    <H4>См. также</H4>
    <P><A href="rdo_obj_pat.htm">Описание образцов</A></P>
    </DIV>
    <BR><SCRIPT src="../../../shared/scripts/navbar.js"></SCRIPT>
</BODY>
</HTML>